/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class prix_periode extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4848139312057682730L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"prix_periode\",\"fields\":[{\"name\":\"ID_ROW\",\"type\":\"long\"},{\"name\":\"CODEDEVISE\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"CODEHOTEL\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"CODEMEALPLAN\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"CODEPRODUIT\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"CODETARIF\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"CODEUNITE\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"CODE_ACTION\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"DATE_ACTION\",\"type\":{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"DATEDEBUT\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"DATEFIN\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"DUREESEJOUR\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"NBPAX\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"NUMJOUR\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"PRIX\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"STATUSPRIX\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"DB\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"TOPIC\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ID_EVENT\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"prix_periode\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<prix_periode> ENCODER =
      new BinaryMessageEncoder<prix_periode>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<prix_periode> DECODER =
      new BinaryMessageDecoder<prix_periode>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<prix_periode> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<prix_periode> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<prix_periode>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this prix_periode to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a prix_periode from a ByteBuffer. */
  public static prix_periode fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long ID_ROW;
  @Deprecated public java.lang.String CODEDEVISE;
  @Deprecated public java.lang.String CODEHOTEL;
  @Deprecated public java.lang.String CODEMEALPLAN;
  @Deprecated public java.lang.String CODEPRODUIT;
  @Deprecated public java.lang.String CODETARIF;
  @Deprecated public java.lang.String CODEUNITE;
  @Deprecated public java.lang.String CODE_ACTION;
  @Deprecated public org.joda.time.DateTime DATE_ACTION;
  @Deprecated public org.joda.time.DateTime DATEDEBUT;
  @Deprecated public org.joda.time.DateTime DATEFIN;
  @Deprecated public java.lang.Integer DUREESEJOUR;
  @Deprecated public java.lang.Integer NBPAX;
  @Deprecated public java.lang.Integer NUMJOUR;
  @Deprecated public java.lang.Double PRIX;
  @Deprecated public java.lang.String STATUSPRIX;
  @Deprecated public java.lang.String DB;
  @Deprecated public java.lang.String TOPIC;
  @Deprecated public java.lang.String ID_EVENT;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public prix_periode() {}

  /**
   * All-args constructor.
   * @param ID_ROW The new value for ID_ROW
   * @param CODEDEVISE The new value for CODEDEVISE
   * @param CODEHOTEL The new value for CODEHOTEL
   * @param CODEMEALPLAN The new value for CODEMEALPLAN
   * @param CODEPRODUIT The new value for CODEPRODUIT
   * @param CODETARIF The new value for CODETARIF
   * @param CODEUNITE The new value for CODEUNITE
   * @param CODE_ACTION The new value for CODE_ACTION
   * @param DATE_ACTION The new value for DATE_ACTION
   * @param DATEDEBUT The new value for DATEDEBUT
   * @param DATEFIN The new value for DATEFIN
   * @param DUREESEJOUR The new value for DUREESEJOUR
   * @param NBPAX The new value for NBPAX
   * @param NUMJOUR The new value for NUMJOUR
   * @param PRIX The new value for PRIX
   * @param STATUSPRIX The new value for STATUSPRIX
   * @param DB The new value for DB
   * @param TOPIC The new value for TOPIC
   * @param ID_EVENT The new value for ID_EVENT
   */
  public prix_periode(java.lang.Long ID_ROW, java.lang.String CODEDEVISE, java.lang.String CODEHOTEL, java.lang.String CODEMEALPLAN, java.lang.String CODEPRODUIT, java.lang.String CODETARIF, java.lang.String CODEUNITE, java.lang.String CODE_ACTION, org.joda.time.DateTime DATE_ACTION, org.joda.time.DateTime DATEDEBUT, org.joda.time.DateTime DATEFIN, java.lang.Integer DUREESEJOUR, java.lang.Integer NBPAX, java.lang.Integer NUMJOUR, java.lang.Double PRIX, java.lang.String STATUSPRIX, java.lang.String DB, java.lang.String TOPIC, java.lang.String ID_EVENT) {
    this.ID_ROW = ID_ROW;
    this.CODEDEVISE = CODEDEVISE;
    this.CODEHOTEL = CODEHOTEL;
    this.CODEMEALPLAN = CODEMEALPLAN;
    this.CODEPRODUIT = CODEPRODUIT;
    this.CODETARIF = CODETARIF;
    this.CODEUNITE = CODEUNITE;
    this.CODE_ACTION = CODE_ACTION;
    this.DATE_ACTION = DATE_ACTION;
    this.DATEDEBUT = DATEDEBUT;
    this.DATEFIN = DATEFIN;
    this.DUREESEJOUR = DUREESEJOUR;
    this.NBPAX = NBPAX;
    this.NUMJOUR = NUMJOUR;
    this.PRIX = PRIX;
    this.STATUSPRIX = STATUSPRIX;
    this.DB = DB;
    this.TOPIC = TOPIC;
    this.ID_EVENT = ID_EVENT;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID_ROW;
    case 1: return CODEDEVISE;
    case 2: return CODEHOTEL;
    case 3: return CODEMEALPLAN;
    case 4: return CODEPRODUIT;
    case 5: return CODETARIF;
    case 6: return CODEUNITE;
    case 7: return CODE_ACTION;
    case 8: return DATE_ACTION;
    case 9: return DATEDEBUT;
    case 10: return DATEFIN;
    case 11: return DUREESEJOUR;
    case 12: return NBPAX;
    case 13: return NUMJOUR;
    case 14: return PRIX;
    case 15: return STATUSPRIX;
    case 16: return DB;
    case 17: return TOPIC;
    case 18: return ID_EVENT;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();
  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();
  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();
  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      TIMESTAMP_CONVERSION,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID_ROW = (java.lang.Long)value$; break;
    case 1: CODEDEVISE = (java.lang.String)value$; break;
    case 2: CODEHOTEL = (java.lang.String)value$; break;
    case 3: CODEMEALPLAN = (java.lang.String)value$; break;
    case 4: CODEPRODUIT = (java.lang.String)value$; break;
    case 5: CODETARIF = (java.lang.String)value$; break;
    case 6: CODEUNITE = (java.lang.String)value$; break;
    case 7: CODE_ACTION = (java.lang.String)value$; break;
    case 8: DATE_ACTION = (org.joda.time.DateTime)value$; break;
    case 9: DATEDEBUT = (org.joda.time.DateTime)value$; break;
    case 10: DATEFIN = (org.joda.time.DateTime)value$; break;
    case 11: DUREESEJOUR = (java.lang.Integer)value$; break;
    case 12: NBPAX = (java.lang.Integer)value$; break;
    case 13: NUMJOUR = (java.lang.Integer)value$; break;
    case 14: PRIX = (java.lang.Double)value$; break;
    case 15: STATUSPRIX = (java.lang.String)value$; break;
    case 16: DB = (java.lang.String)value$; break;
    case 17: TOPIC = (java.lang.String)value$; break;
    case 18: ID_EVENT = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID_ROW' field.
   * @return The value of the 'ID_ROW' field.
   */
  public java.lang.Long getIDROW() {
    return ID_ROW;
  }

  /**
   * Sets the value of the 'ID_ROW' field.
   * @param value the value to set.
   */
  public void setIDROW(java.lang.Long value) {
    this.ID_ROW = value;
  }

  /**
   * Gets the value of the 'CODEDEVISE' field.
   * @return The value of the 'CODEDEVISE' field.
   */
  public java.lang.String getCODEDEVISE() {
    return CODEDEVISE;
  }

  /**
   * Sets the value of the 'CODEDEVISE' field.
   * @param value the value to set.
   */
  public void setCODEDEVISE(java.lang.String value) {
    this.CODEDEVISE = value;
  }

  /**
   * Gets the value of the 'CODEHOTEL' field.
   * @return The value of the 'CODEHOTEL' field.
   */
  public java.lang.String getCODEHOTEL() {
    return CODEHOTEL;
  }

  /**
   * Sets the value of the 'CODEHOTEL' field.
   * @param value the value to set.
   */
  public void setCODEHOTEL(java.lang.String value) {
    this.CODEHOTEL = value;
  }

  /**
   * Gets the value of the 'CODEMEALPLAN' field.
   * @return The value of the 'CODEMEALPLAN' field.
   */
  public java.lang.String getCODEMEALPLAN() {
    return CODEMEALPLAN;
  }

  /**
   * Sets the value of the 'CODEMEALPLAN' field.
   * @param value the value to set.
   */
  public void setCODEMEALPLAN(java.lang.String value) {
    this.CODEMEALPLAN = value;
  }

  /**
   * Gets the value of the 'CODEPRODUIT' field.
   * @return The value of the 'CODEPRODUIT' field.
   */
  public java.lang.String getCODEPRODUIT() {
    return CODEPRODUIT;
  }

  /**
   * Sets the value of the 'CODEPRODUIT' field.
   * @param value the value to set.
   */
  public void setCODEPRODUIT(java.lang.String value) {
    this.CODEPRODUIT = value;
  }

  /**
   * Gets the value of the 'CODETARIF' field.
   * @return The value of the 'CODETARIF' field.
   */
  public java.lang.String getCODETARIF() {
    return CODETARIF;
  }

  /**
   * Sets the value of the 'CODETARIF' field.
   * @param value the value to set.
   */
  public void setCODETARIF(java.lang.String value) {
    this.CODETARIF = value;
  }

  /**
   * Gets the value of the 'CODEUNITE' field.
   * @return The value of the 'CODEUNITE' field.
   */
  public java.lang.String getCODEUNITE() {
    return CODEUNITE;
  }

  /**
   * Sets the value of the 'CODEUNITE' field.
   * @param value the value to set.
   */
  public void setCODEUNITE(java.lang.String value) {
    this.CODEUNITE = value;
  }

  /**
   * Gets the value of the 'CODE_ACTION' field.
   * @return The value of the 'CODE_ACTION' field.
   */
  public java.lang.String getCODEACTION() {
    return CODE_ACTION;
  }

  /**
   * Sets the value of the 'CODE_ACTION' field.
   * @param value the value to set.
   */
  public void setCODEACTION(java.lang.String value) {
    this.CODE_ACTION = value;
  }

  /**
   * Gets the value of the 'DATE_ACTION' field.
   * @return The value of the 'DATE_ACTION' field.
   */
  public org.joda.time.DateTime getDATEACTION() {
    return DATE_ACTION;
  }

  /**
   * Sets the value of the 'DATE_ACTION' field.
   * @param value the value to set.
   */
  public void setDATEACTION(org.joda.time.DateTime value) {
    this.DATE_ACTION = value;
  }

  /**
   * Gets the value of the 'DATEDEBUT' field.
   * @return The value of the 'DATEDEBUT' field.
   */
  public org.joda.time.DateTime getDATEDEBUT() {
    return DATEDEBUT;
  }

  /**
   * Sets the value of the 'DATEDEBUT' field.
   * @param value the value to set.
   */
  public void setDATEDEBUT(org.joda.time.DateTime value) {
    this.DATEDEBUT = value;
  }

  /**
   * Gets the value of the 'DATEFIN' field.
   * @return The value of the 'DATEFIN' field.
   */
  public org.joda.time.DateTime getDATEFIN() {
    return DATEFIN;
  }

  /**
   * Sets the value of the 'DATEFIN' field.
   * @param value the value to set.
   */
  public void setDATEFIN(org.joda.time.DateTime value) {
    this.DATEFIN = value;
  }

  /**
   * Gets the value of the 'DUREESEJOUR' field.
   * @return The value of the 'DUREESEJOUR' field.
   */
  public java.lang.Integer getDUREESEJOUR() {
    return DUREESEJOUR;
  }

  /**
   * Sets the value of the 'DUREESEJOUR' field.
   * @param value the value to set.
   */
  public void setDUREESEJOUR(java.lang.Integer value) {
    this.DUREESEJOUR = value;
  }

  /**
   * Gets the value of the 'NBPAX' field.
   * @return The value of the 'NBPAX' field.
   */
  public java.lang.Integer getNBPAX() {
    return NBPAX;
  }

  /**
   * Sets the value of the 'NBPAX' field.
   * @param value the value to set.
   */
  public void setNBPAX(java.lang.Integer value) {
    this.NBPAX = value;
  }

  /**
   * Gets the value of the 'NUMJOUR' field.
   * @return The value of the 'NUMJOUR' field.
   */
  public java.lang.Integer getNUMJOUR() {
    return NUMJOUR;
  }

  /**
   * Sets the value of the 'NUMJOUR' field.
   * @param value the value to set.
   */
  public void setNUMJOUR(java.lang.Integer value) {
    this.NUMJOUR = value;
  }

  /**
   * Gets the value of the 'PRIX' field.
   * @return The value of the 'PRIX' field.
   */
  public java.lang.Double getPRIX() {
    return PRIX;
  }

  /**
   * Sets the value of the 'PRIX' field.
   * @param value the value to set.
   */
  public void setPRIX(java.lang.Double value) {
    this.PRIX = value;
  }

  /**
   * Gets the value of the 'STATUSPRIX' field.
   * @return The value of the 'STATUSPRIX' field.
   */
  public java.lang.String getSTATUSPRIX() {
    return STATUSPRIX;
  }

  /**
   * Sets the value of the 'STATUSPRIX' field.
   * @param value the value to set.
   */
  public void setSTATUSPRIX(java.lang.String value) {
    this.STATUSPRIX = value;
  }

  /**
   * Gets the value of the 'DB' field.
   * @return The value of the 'DB' field.
   */
  public java.lang.String getDB() {
    return DB;
  }

  /**
   * Sets the value of the 'DB' field.
   * @param value the value to set.
   */
  public void setDB(java.lang.String value) {
    this.DB = value;
  }

  /**
   * Gets the value of the 'TOPIC' field.
   * @return The value of the 'TOPIC' field.
   */
  public java.lang.String getTOPIC() {
    return TOPIC;
  }

  /**
   * Sets the value of the 'TOPIC' field.
   * @param value the value to set.
   */
  public void setTOPIC(java.lang.String value) {
    this.TOPIC = value;
  }

  /**
   * Gets the value of the 'ID_EVENT' field.
   * @return The value of the 'ID_EVENT' field.
   */
  public java.lang.String getIDEVENT() {
    return ID_EVENT;
  }

  /**
   * Sets the value of the 'ID_EVENT' field.
   * @param value the value to set.
   */
  public void setIDEVENT(java.lang.String value) {
    this.ID_EVENT = value;
  }

  /**
   * Creates a new prix_periode RecordBuilder.
   * @return A new prix_periode RecordBuilder
   */
  public static prix_periode.Builder newBuilder() {
    return new prix_periode.Builder();
  }

  /**
   * Creates a new prix_periode RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new prix_periode RecordBuilder
   */
  public static prix_periode.Builder newBuilder(prix_periode.Builder other) {
    return new prix_periode.Builder(other);
  }

  /**
   * Creates a new prix_periode RecordBuilder by copying an existing prix_periode instance.
   * @param other The existing instance to copy.
   * @return A new prix_periode RecordBuilder
   */
  public static prix_periode.Builder newBuilder(prix_periode other) {
    return new prix_periode.Builder(other);
  }

  /**
   * RecordBuilder for prix_periode instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<prix_periode>
    implements org.apache.avro.data.RecordBuilder<prix_periode> {

    private long ID_ROW;
    private java.lang.String CODEDEVISE;
    private java.lang.String CODEHOTEL;
    private java.lang.String CODEMEALPLAN;
    private java.lang.String CODEPRODUIT;
    private java.lang.String CODETARIF;
    private java.lang.String CODEUNITE;
    private java.lang.String CODE_ACTION;
    private org.joda.time.DateTime DATE_ACTION;
    private org.joda.time.DateTime DATEDEBUT;
    private org.joda.time.DateTime DATEFIN;
    private java.lang.Integer DUREESEJOUR;
    private java.lang.Integer NBPAX;
    private java.lang.Integer NUMJOUR;
    private java.lang.Double PRIX;
    private java.lang.String STATUSPRIX;
    private java.lang.String DB;
    private java.lang.String TOPIC;
    private java.lang.String ID_EVENT;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(prix_periode.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID_ROW)) {
        this.ID_ROW = data().deepCopy(fields()[0].schema(), other.ID_ROW);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CODEDEVISE)) {
        this.CODEDEVISE = data().deepCopy(fields()[1].schema(), other.CODEDEVISE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CODEHOTEL)) {
        this.CODEHOTEL = data().deepCopy(fields()[2].schema(), other.CODEHOTEL);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CODEMEALPLAN)) {
        this.CODEMEALPLAN = data().deepCopy(fields()[3].schema(), other.CODEMEALPLAN);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CODEPRODUIT)) {
        this.CODEPRODUIT = data().deepCopy(fields()[4].schema(), other.CODEPRODUIT);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CODETARIF)) {
        this.CODETARIF = data().deepCopy(fields()[5].schema(), other.CODETARIF);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CODEUNITE)) {
        this.CODEUNITE = data().deepCopy(fields()[6].schema(), other.CODEUNITE);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CODE_ACTION)) {
        this.CODE_ACTION = data().deepCopy(fields()[7].schema(), other.CODE_ACTION);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.DATE_ACTION)) {
        this.DATE_ACTION = data().deepCopy(fields()[8].schema(), other.DATE_ACTION);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.DATEDEBUT)) {
        this.DATEDEBUT = data().deepCopy(fields()[9].schema(), other.DATEDEBUT);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.DATEFIN)) {
        this.DATEFIN = data().deepCopy(fields()[10].schema(), other.DATEFIN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.DUREESEJOUR)) {
        this.DUREESEJOUR = data().deepCopy(fields()[11].schema(), other.DUREESEJOUR);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.NBPAX)) {
        this.NBPAX = data().deepCopy(fields()[12].schema(), other.NBPAX);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.NUMJOUR)) {
        this.NUMJOUR = data().deepCopy(fields()[13].schema(), other.NUMJOUR);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.PRIX)) {
        this.PRIX = data().deepCopy(fields()[14].schema(), other.PRIX);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.STATUSPRIX)) {
        this.STATUSPRIX = data().deepCopy(fields()[15].schema(), other.STATUSPRIX);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.DB)) {
        this.DB = data().deepCopy(fields()[16].schema(), other.DB);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.TOPIC)) {
        this.TOPIC = data().deepCopy(fields()[17].schema(), other.TOPIC);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.ID_EVENT)) {
        this.ID_EVENT = data().deepCopy(fields()[18].schema(), other.ID_EVENT);
        fieldSetFlags()[18] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing prix_periode instance
     * @param other The existing instance to copy.
     */
    private Builder(prix_periode other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ID_ROW)) {
        this.ID_ROW = data().deepCopy(fields()[0].schema(), other.ID_ROW);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CODEDEVISE)) {
        this.CODEDEVISE = data().deepCopy(fields()[1].schema(), other.CODEDEVISE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CODEHOTEL)) {
        this.CODEHOTEL = data().deepCopy(fields()[2].schema(), other.CODEHOTEL);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CODEMEALPLAN)) {
        this.CODEMEALPLAN = data().deepCopy(fields()[3].schema(), other.CODEMEALPLAN);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CODEPRODUIT)) {
        this.CODEPRODUIT = data().deepCopy(fields()[4].schema(), other.CODEPRODUIT);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CODETARIF)) {
        this.CODETARIF = data().deepCopy(fields()[5].schema(), other.CODETARIF);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CODEUNITE)) {
        this.CODEUNITE = data().deepCopy(fields()[6].schema(), other.CODEUNITE);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CODE_ACTION)) {
        this.CODE_ACTION = data().deepCopy(fields()[7].schema(), other.CODE_ACTION);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.DATE_ACTION)) {
        this.DATE_ACTION = data().deepCopy(fields()[8].schema(), other.DATE_ACTION);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.DATEDEBUT)) {
        this.DATEDEBUT = data().deepCopy(fields()[9].schema(), other.DATEDEBUT);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.DATEFIN)) {
        this.DATEFIN = data().deepCopy(fields()[10].schema(), other.DATEFIN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.DUREESEJOUR)) {
        this.DUREESEJOUR = data().deepCopy(fields()[11].schema(), other.DUREESEJOUR);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.NBPAX)) {
        this.NBPAX = data().deepCopy(fields()[12].schema(), other.NBPAX);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.NUMJOUR)) {
        this.NUMJOUR = data().deepCopy(fields()[13].schema(), other.NUMJOUR);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.PRIX)) {
        this.PRIX = data().deepCopy(fields()[14].schema(), other.PRIX);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.STATUSPRIX)) {
        this.STATUSPRIX = data().deepCopy(fields()[15].schema(), other.STATUSPRIX);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.DB)) {
        this.DB = data().deepCopy(fields()[16].schema(), other.DB);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.TOPIC)) {
        this.TOPIC = data().deepCopy(fields()[17].schema(), other.TOPIC);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.ID_EVENT)) {
        this.ID_EVENT = data().deepCopy(fields()[18].schema(), other.ID_EVENT);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'ID_ROW' field.
      * @return The value.
      */
    public java.lang.Long getIDROW() {
      return ID_ROW;
    }

    /**
      * Sets the value of the 'ID_ROW' field.
      * @param value The value of 'ID_ROW'.
      * @return This builder.
      */
    public prix_periode.Builder setIDROW(long value) {
      validate(fields()[0], value);
      this.ID_ROW = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ID_ROW' field has been set.
      * @return True if the 'ID_ROW' field has been set, false otherwise.
      */
    public boolean hasIDROW() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ID_ROW' field.
      * @return This builder.
      */
    public prix_periode.Builder clearIDROW() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODEDEVISE' field.
      * @return The value.
      */
    public java.lang.String getCODEDEVISE() {
      return CODEDEVISE;
    }

    /**
      * Sets the value of the 'CODEDEVISE' field.
      * @param value The value of 'CODEDEVISE'.
      * @return This builder.
      */
    public prix_periode.Builder setCODEDEVISE(java.lang.String value) {
      validate(fields()[1], value);
      this.CODEDEVISE = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CODEDEVISE' field has been set.
      * @return True if the 'CODEDEVISE' field has been set, false otherwise.
      */
    public boolean hasCODEDEVISE() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CODEDEVISE' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODEDEVISE() {
      CODEDEVISE = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODEHOTEL' field.
      * @return The value.
      */
    public java.lang.String getCODEHOTEL() {
      return CODEHOTEL;
    }

    /**
      * Sets the value of the 'CODEHOTEL' field.
      * @param value The value of 'CODEHOTEL'.
      * @return This builder.
      */
    public prix_periode.Builder setCODEHOTEL(java.lang.String value) {
      validate(fields()[2], value);
      this.CODEHOTEL = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'CODEHOTEL' field has been set.
      * @return True if the 'CODEHOTEL' field has been set, false otherwise.
      */
    public boolean hasCODEHOTEL() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'CODEHOTEL' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODEHOTEL() {
      CODEHOTEL = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODEMEALPLAN' field.
      * @return The value.
      */
    public java.lang.String getCODEMEALPLAN() {
      return CODEMEALPLAN;
    }

    /**
      * Sets the value of the 'CODEMEALPLAN' field.
      * @param value The value of 'CODEMEALPLAN'.
      * @return This builder.
      */
    public prix_periode.Builder setCODEMEALPLAN(java.lang.String value) {
      validate(fields()[3], value);
      this.CODEMEALPLAN = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'CODEMEALPLAN' field has been set.
      * @return True if the 'CODEMEALPLAN' field has been set, false otherwise.
      */
    public boolean hasCODEMEALPLAN() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'CODEMEALPLAN' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODEMEALPLAN() {
      CODEMEALPLAN = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODEPRODUIT' field.
      * @return The value.
      */
    public java.lang.String getCODEPRODUIT() {
      return CODEPRODUIT;
    }

    /**
      * Sets the value of the 'CODEPRODUIT' field.
      * @param value The value of 'CODEPRODUIT'.
      * @return This builder.
      */
    public prix_periode.Builder setCODEPRODUIT(java.lang.String value) {
      validate(fields()[4], value);
      this.CODEPRODUIT = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CODEPRODUIT' field has been set.
      * @return True if the 'CODEPRODUIT' field has been set, false otherwise.
      */
    public boolean hasCODEPRODUIT() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CODEPRODUIT' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODEPRODUIT() {
      CODEPRODUIT = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODETARIF' field.
      * @return The value.
      */
    public java.lang.String getCODETARIF() {
      return CODETARIF;
    }

    /**
      * Sets the value of the 'CODETARIF' field.
      * @param value The value of 'CODETARIF'.
      * @return This builder.
      */
    public prix_periode.Builder setCODETARIF(java.lang.String value) {
      validate(fields()[5], value);
      this.CODETARIF = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'CODETARIF' field has been set.
      * @return True if the 'CODETARIF' field has been set, false otherwise.
      */
    public boolean hasCODETARIF() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'CODETARIF' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODETARIF() {
      CODETARIF = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODEUNITE' field.
      * @return The value.
      */
    public java.lang.String getCODEUNITE() {
      return CODEUNITE;
    }

    /**
      * Sets the value of the 'CODEUNITE' field.
      * @param value The value of 'CODEUNITE'.
      * @return This builder.
      */
    public prix_periode.Builder setCODEUNITE(java.lang.String value) {
      validate(fields()[6], value);
      this.CODEUNITE = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'CODEUNITE' field has been set.
      * @return True if the 'CODEUNITE' field has been set, false otherwise.
      */
    public boolean hasCODEUNITE() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'CODEUNITE' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODEUNITE() {
      CODEUNITE = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'CODE_ACTION' field.
      * @return The value.
      */
    public java.lang.String getCODEACTION() {
      return CODE_ACTION;
    }

    /**
      * Sets the value of the 'CODE_ACTION' field.
      * @param value The value of 'CODE_ACTION'.
      * @return This builder.
      */
    public prix_periode.Builder setCODEACTION(java.lang.String value) {
      validate(fields()[7], value);
      this.CODE_ACTION = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'CODE_ACTION' field has been set.
      * @return True if the 'CODE_ACTION' field has been set, false otherwise.
      */
    public boolean hasCODEACTION() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'CODE_ACTION' field.
      * @return This builder.
      */
    public prix_periode.Builder clearCODEACTION() {
      CODE_ACTION = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'DATE_ACTION' field.
      * @return The value.
      */
    public org.joda.time.DateTime getDATEACTION() {
      return DATE_ACTION;
    }

    /**
      * Sets the value of the 'DATE_ACTION' field.
      * @param value The value of 'DATE_ACTION'.
      * @return This builder.
      */
    public prix_periode.Builder setDATEACTION(org.joda.time.DateTime value) {
      validate(fields()[8], value);
      this.DATE_ACTION = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'DATE_ACTION' field has been set.
      * @return True if the 'DATE_ACTION' field has been set, false otherwise.
      */
    public boolean hasDATEACTION() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'DATE_ACTION' field.
      * @return This builder.
      */
    public prix_periode.Builder clearDATEACTION() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'DATEDEBUT' field.
      * @return The value.
      */
    public org.joda.time.DateTime getDATEDEBUT() {
      return DATEDEBUT;
    }

    /**
      * Sets the value of the 'DATEDEBUT' field.
      * @param value The value of 'DATEDEBUT'.
      * @return This builder.
      */
    public prix_periode.Builder setDATEDEBUT(org.joda.time.DateTime value) {
      validate(fields()[9], value);
      this.DATEDEBUT = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'DATEDEBUT' field has been set.
      * @return True if the 'DATEDEBUT' field has been set, false otherwise.
      */
    public boolean hasDATEDEBUT() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'DATEDEBUT' field.
      * @return This builder.
      */
    public prix_periode.Builder clearDATEDEBUT() {
      DATEDEBUT = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'DATEFIN' field.
      * @return The value.
      */
    public org.joda.time.DateTime getDATEFIN() {
      return DATEFIN;
    }

    /**
      * Sets the value of the 'DATEFIN' field.
      * @param value The value of 'DATEFIN'.
      * @return This builder.
      */
    public prix_periode.Builder setDATEFIN(org.joda.time.DateTime value) {
      validate(fields()[10], value);
      this.DATEFIN = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'DATEFIN' field has been set.
      * @return True if the 'DATEFIN' field has been set, false otherwise.
      */
    public boolean hasDATEFIN() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'DATEFIN' field.
      * @return This builder.
      */
    public prix_periode.Builder clearDATEFIN() {
      DATEFIN = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'DUREESEJOUR' field.
      * @return The value.
      */
    public java.lang.Integer getDUREESEJOUR() {
      return DUREESEJOUR;
    }

    /**
      * Sets the value of the 'DUREESEJOUR' field.
      * @param value The value of 'DUREESEJOUR'.
      * @return This builder.
      */
    public prix_periode.Builder setDUREESEJOUR(java.lang.Integer value) {
      validate(fields()[11], value);
      this.DUREESEJOUR = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'DUREESEJOUR' field has been set.
      * @return True if the 'DUREESEJOUR' field has been set, false otherwise.
      */
    public boolean hasDUREESEJOUR() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'DUREESEJOUR' field.
      * @return This builder.
      */
    public prix_periode.Builder clearDUREESEJOUR() {
      DUREESEJOUR = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'NBPAX' field.
      * @return The value.
      */
    public java.lang.Integer getNBPAX() {
      return NBPAX;
    }

    /**
      * Sets the value of the 'NBPAX' field.
      * @param value The value of 'NBPAX'.
      * @return This builder.
      */
    public prix_periode.Builder setNBPAX(java.lang.Integer value) {
      validate(fields()[12], value);
      this.NBPAX = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'NBPAX' field has been set.
      * @return True if the 'NBPAX' field has been set, false otherwise.
      */
    public boolean hasNBPAX() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'NBPAX' field.
      * @return This builder.
      */
    public prix_periode.Builder clearNBPAX() {
      NBPAX = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'NUMJOUR' field.
      * @return The value.
      */
    public java.lang.Integer getNUMJOUR() {
      return NUMJOUR;
    }

    /**
      * Sets the value of the 'NUMJOUR' field.
      * @param value The value of 'NUMJOUR'.
      * @return This builder.
      */
    public prix_periode.Builder setNUMJOUR(java.lang.Integer value) {
      validate(fields()[13], value);
      this.NUMJOUR = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'NUMJOUR' field has been set.
      * @return True if the 'NUMJOUR' field has been set, false otherwise.
      */
    public boolean hasNUMJOUR() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'NUMJOUR' field.
      * @return This builder.
      */
    public prix_periode.Builder clearNUMJOUR() {
      NUMJOUR = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'PRIX' field.
      * @return The value.
      */
    public java.lang.Double getPRIX() {
      return PRIX;
    }

    /**
      * Sets the value of the 'PRIX' field.
      * @param value The value of 'PRIX'.
      * @return This builder.
      */
    public prix_periode.Builder setPRIX(java.lang.Double value) {
      validate(fields()[14], value);
      this.PRIX = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'PRIX' field has been set.
      * @return True if the 'PRIX' field has been set, false otherwise.
      */
    public boolean hasPRIX() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'PRIX' field.
      * @return This builder.
      */
    public prix_periode.Builder clearPRIX() {
      PRIX = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'STATUSPRIX' field.
      * @return The value.
      */
    public java.lang.String getSTATUSPRIX() {
      return STATUSPRIX;
    }

    /**
      * Sets the value of the 'STATUSPRIX' field.
      * @param value The value of 'STATUSPRIX'.
      * @return This builder.
      */
    public prix_periode.Builder setSTATUSPRIX(java.lang.String value) {
      validate(fields()[15], value);
      this.STATUSPRIX = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'STATUSPRIX' field has been set.
      * @return True if the 'STATUSPRIX' field has been set, false otherwise.
      */
    public boolean hasSTATUSPRIX() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'STATUSPRIX' field.
      * @return This builder.
      */
    public prix_periode.Builder clearSTATUSPRIX() {
      STATUSPRIX = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'DB' field.
      * @return The value.
      */
    public java.lang.String getDB() {
      return DB;
    }

    /**
      * Sets the value of the 'DB' field.
      * @param value The value of 'DB'.
      * @return This builder.
      */
    public prix_periode.Builder setDB(java.lang.String value) {
      validate(fields()[16], value);
      this.DB = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'DB' field has been set.
      * @return True if the 'DB' field has been set, false otherwise.
      */
    public boolean hasDB() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'DB' field.
      * @return This builder.
      */
    public prix_periode.Builder clearDB() {
      DB = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'TOPIC' field.
      * @return The value.
      */
    public java.lang.String getTOPIC() {
      return TOPIC;
    }

    /**
      * Sets the value of the 'TOPIC' field.
      * @param value The value of 'TOPIC'.
      * @return This builder.
      */
    public prix_periode.Builder setTOPIC(java.lang.String value) {
      validate(fields()[17], value);
      this.TOPIC = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'TOPIC' field has been set.
      * @return True if the 'TOPIC' field has been set, false otherwise.
      */
    public boolean hasTOPIC() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'TOPIC' field.
      * @return This builder.
      */
    public prix_periode.Builder clearTOPIC() {
      TOPIC = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'ID_EVENT' field.
      * @return The value.
      */
    public java.lang.String getIDEVENT() {
      return ID_EVENT;
    }

    /**
      * Sets the value of the 'ID_EVENT' field.
      * @param value The value of 'ID_EVENT'.
      * @return This builder.
      */
    public prix_periode.Builder setIDEVENT(java.lang.String value) {
      validate(fields()[18], value);
      this.ID_EVENT = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'ID_EVENT' field has been set.
      * @return True if the 'ID_EVENT' field has been set, false otherwise.
      */
    public boolean hasIDEVENT() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'ID_EVENT' field.
      * @return This builder.
      */
    public prix_periode.Builder clearIDEVENT() {
      ID_EVENT = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public prix_periode build() {
      try {
        prix_periode record = new prix_periode();
        record.ID_ROW = fieldSetFlags()[0] ? this.ID_ROW : (java.lang.Long) defaultValue(fields()[0], record.getConversion(0));
        record.CODEDEVISE = fieldSetFlags()[1] ? this.CODEDEVISE : (java.lang.String) defaultValue(fields()[1], record.getConversion(1));
        record.CODEHOTEL = fieldSetFlags()[2] ? this.CODEHOTEL : (java.lang.String) defaultValue(fields()[2], record.getConversion(2));
        record.CODEMEALPLAN = fieldSetFlags()[3] ? this.CODEMEALPLAN : (java.lang.String) defaultValue(fields()[3], record.getConversion(3));
        record.CODEPRODUIT = fieldSetFlags()[4] ? this.CODEPRODUIT : (java.lang.String) defaultValue(fields()[4], record.getConversion(4));
        record.CODETARIF = fieldSetFlags()[5] ? this.CODETARIF : (java.lang.String) defaultValue(fields()[5], record.getConversion(5));
        record.CODEUNITE = fieldSetFlags()[6] ? this.CODEUNITE : (java.lang.String) defaultValue(fields()[6], record.getConversion(6));
        record.CODE_ACTION = fieldSetFlags()[7] ? this.CODE_ACTION : (java.lang.String) defaultValue(fields()[7], record.getConversion(7));
        record.DATE_ACTION = fieldSetFlags()[8] ? this.DATE_ACTION : (org.joda.time.DateTime) defaultValue(fields()[8], record.getConversion(8));
        record.DATEDEBUT = fieldSetFlags()[9] ? this.DATEDEBUT : (org.joda.time.DateTime) defaultValue(fields()[9], record.getConversion(9));
        record.DATEFIN = fieldSetFlags()[10] ? this.DATEFIN : (org.joda.time.DateTime) defaultValue(fields()[10], record.getConversion(10));
        record.DUREESEJOUR = fieldSetFlags()[11] ? this.DUREESEJOUR : (java.lang.Integer) defaultValue(fields()[11], record.getConversion(11));
        record.NBPAX = fieldSetFlags()[12] ? this.NBPAX : (java.lang.Integer) defaultValue(fields()[12], record.getConversion(12));
        record.NUMJOUR = fieldSetFlags()[13] ? this.NUMJOUR : (java.lang.Integer) defaultValue(fields()[13], record.getConversion(13));
        record.PRIX = fieldSetFlags()[14] ? this.PRIX : (java.lang.Double) defaultValue(fields()[14], record.getConversion(14));
        record.STATUSPRIX = fieldSetFlags()[15] ? this.STATUSPRIX : (java.lang.String) defaultValue(fields()[15], record.getConversion(15));
        record.DB = fieldSetFlags()[16] ? this.DB : (java.lang.String) defaultValue(fields()[16], record.getConversion(16));
        record.TOPIC = fieldSetFlags()[17] ? this.TOPIC : (java.lang.String) defaultValue(fields()[17], record.getConversion(17));
        record.ID_EVENT = fieldSetFlags()[18] ? this.ID_EVENT : (java.lang.String) defaultValue(fields()[18], record.getConversion(18));
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<prix_periode>
    WRITER$ = (org.apache.avro.io.DatumWriter<prix_periode>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<prix_periode>
    READER$ = (org.apache.avro.io.DatumReader<prix_periode>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
